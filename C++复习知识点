2020.5.27
一、程序运行起来的四个阶段：预处理、编译、汇编、链接
                          .c-.i   .i-.s .s-.o .o-.out
二、有时候在C++工程中可能需要将某些函数按照C的风格来编译，在函数前加extern "C"，意思是告诉编译器，将 该函数按照C语言规则来编译。
extern "C" int Add(int left, int right);
int main() {    Add(1,2);    return 0; }
三、引用——给变量起别名
引用的特性：1.引用必须初始化  2.一个变量可以有多个引用  3.一个引用只能有一个实体，不能改变
注意：引用类型和引用实体必须是一个类型
引用和指针的区别：
1.引用使用必须初始化但是指针没有要求
2.引用只能指定一个实体，不能再改变，但是指针可以改变。
3.没有NULL引用，但有NULL指针
4.在sizeof中的含义不用：引用计算的是引用类型的大小，而指针则是地址空间占用的大小，在32位下是4个字节大小
5.引用自加指的是引用实体+1，而指针自加则是向后偏移一个类型的大小
6.有多级指针但是没有多级引用
7.访问实体方式不同，指针是解引用，而引用是编译器处理
8.引用比指针更加安全
四、size_t 
size_t和int
      size_t是一些C/C++标准在stddef.h中定义的。这个类型足以用来表示对象的大小。size_t的真实类型与操作系统有关。
在32位架构中被普遍定义为：
typedef   unsigned int size_t;
而在64位架构中被定义为：
typedef  unsigned long size_t;
        size_t在32位架构上是4字节，在64位架构上是8字节，在不同架构上进行编译时需要注意这个问题。而int在不同架构下都是4字节，与size_t不同；且int为带符号数，size_t为无符号数。
为什么有时候不用int，而是用size_type或者size_t:
       与int固定四个字节不同有所不同,size_t的取值range是目标平台下最大可能的数组尺寸,一些平台下size_t的范围小于int的正数范围,又或者大于unsigned int. 使用Int既有可能浪费，又有可能范围不够大。
五、内联函数：是一种以空间换时间的方法，在函数中直接展开内联函数，省去了调用函数的开销。但不利于函数过长或有较多循环、递归的情况
内联函数对编译器只是一个建议，如果内联函数自身带有过多的循环、递归，则编译器会忽略内联属性
六、宏的优缺点
优点：增强代码复用性，提高性能。
缺点：没有办法调试检查（在预编译阶段进行了替换）。导致代码可读性差，可维护性差。没办法进行类型安全检查
改进：常量定义使用cons ，函数使用内联函数
